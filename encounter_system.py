# encounter_system.py
import random
from dataclasses import dataclass, asdict
from typing import List, Dict


# =====================================================
# 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå (Monster Database)
# =====================================================
@dataclass
class Monster:
    name: str
    level: int | str
    hp: int
    atk: int
    defense: int
    exp: int
    drop: str
    skill: str


MONSTER_DB: Dict[str, Monster] = {
    "Sproutkin": Monster("Sproutkin", 1, 40, 8, 4, 15, "Leaf Seed", "‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ 10% ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏©"),
    "Ironleaf Beetle": Monster("Ironleaf Beetle", 2, 60, 10, 8, 25, "Iron Shard", "‡∏•‡∏î‡∏î‡∏≤‡πÄ‡∏°‡∏à‡πÄ‡∏ß‡∏ó 20%"),
    "Vine Wolf": Monster("Vine Wolf", 3, 80, 12, 6, 35, "Wolf Pelt", "‡∏≠‡∏≤‡∏à‡πÇ‡∏à‡∏°‡∏ï‡∏µ 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"),
    "Sprout Mage": Monster("Sprout Mage", 3, 55, 8, 5, 30, "Mana Fruit", "‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏ó Poison Mist"),
    "Nano Sprig": Monster("Nano Sprig", 2, 50, 9, 5, 20, "Nano Core", "‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÅ‡∏ö‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏ô‡∏≤‡πÇ‡∏ô"),
    "Event Beast": Monster("Event Beast", "‚Äî", 100, 20, 8, 40, "Rare Component", "‡∏´‡∏•‡∏±‡∏ö‡∏•‡∏∂‡∏Å 1 ‡∏ï‡∏≤"),
}


# =====================================================
# 2. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°
# =====================================================
EVENT_TYPES = ["Monster", "No Encounter"]
EVENT_WEIGHTS = [60, 40]

MONSTER_NAMES = list(MONSTER_DB.keys())
MONSTER_WEIGHTS = [4, 4, 4, 4, 4, 1]  # Event Beast ‡∏´‡∏≤‡∏¢‡∏≤‡∏Å


# =====================================================
# 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
# =====================================================
def draw_encounter() -> str:
    """‡∏™‡∏∏‡πà‡∏°‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏≠‡∏∞‡πÑ‡∏£ (‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤)"""
    return random.choices(EVENT_TYPES, weights=EVENT_WEIGHTS, k=1)[0]


def draw_monster() -> Monster:
    """‡∏™‡∏∏‡πà‡∏°‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    name = random.choices(MONSTER_NAMES, weights=MONSTER_WEIGHTS, k=1)[0]
    return MONSTER_DB[name]


def simulate_encounter(verbose: bool = True) -> Dict[str, str]:
    """‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡πà‡∏ß‡∏Å‡∏≤‡∏£‡πå‡∏î 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"""
    result_type = draw_encounter()

    if verbose:
        print("---------------------------------")
        print("üé¥ ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏±‡πà‡∏ß‡∏Å‡∏≤‡∏£‡πå‡∏î...")

    if result_type == "No Encounter":
        if verbose:
            print("‚ú® ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ (No Encounter) ‚Äî ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô")
        return {"Type": "No Encounter"}

    # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
    monster = draw_monster()
    if verbose:
        print(f"‚öîÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏ö‡∏Å‡∏±‡∏ö {monster.name} (LV: {monster.level})")
        print(f"HP: {monster.hp} | ATK: {monster.atk} | DEF: {monster.defense}")
        print(f"EXP: {monster.exp} | Drop: {monster.drop}")
        print(f"Skill: {monster.skill}")
        print("---------------------------------")

    return {"Type": "Monster", "Monster": monster.name}


# =====================================================
# 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏° (‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö)
# =====================================================
def simulate_multiple_draws(rounds: int = 10):
    """‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á"""
    summary = {"Monster": 0, "No Encounter": 0}
    monster_counter: Dict[str, int] = {m: 0 for m in MONSTER_NAMES}

    for i in range(rounds):
        result = simulate_encounter(verbose=False)
        summary[result["Type"]] += 1
        if result["Type"] == "Monster":
            monster_counter[result["Monster"]] += 1

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏ß‡∏°
    print(f"\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {rounds} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    print(f"- ‡πÄ‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {summary['Monster']} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    print(f"- ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤: {summary['No Encounter']} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")

    print("\nüêâ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö:")
    for name, count in monster_counter.items():
        if count > 0:
            print(f"  ‚Ä¢ {name}: {count} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")


# =====================================================
# 5. Main (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡πÉ‡∏ô GitHub / CLI)
# =====================================================
if __name__ == "__main__":
    print("=== ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå (Encounter System) ===\n")

    # ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    simulate_encounter()

    # ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏î‡πâ)
    simulate_multiple_draws(rounds=10)
